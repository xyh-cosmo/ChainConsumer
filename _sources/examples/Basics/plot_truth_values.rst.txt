

.. _sphx_glr_examples_Basics_plot_truth_values.py:


============
Truth Values
============

Plot truth values on top of your contours.



You can specify truth values using a list (in the same order as the
declared parameters).



.. code-block:: python


    import numpy as np
    from numpy.random import normal, multivariate_normal
    from chainconsumer import ChainConsumer

    np.random.seed(2)
    cov = 0.2 * normal(size=(3, 3)) + np.identity(3)
    truth = normal(size=3)
    data = multivariate_normal(truth, 0.5 * (cov + cov.T), size=100000)

    c = ChainConsumer().add_chain(data, parameters=["$x$", "$y$", r"$\beta$"])
    fig = c.plotter.plot(truth=truth)
    fig.set_size_inches(4.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/Basics/images/sphx_glr_plot_truth_values_001.png
    :align: center




Or you can specify truth values using a dictionary. This allows you to specify
truth values for only some parameters. You can also customise the look
of your truth lines.



.. code-block:: python



    c.configure_truth(color='w', ls=":", alpha=0.8)
    fig2 = c.plotter.plot(truth={"$x$": truth[0], "$y$": truth[1]})
    fig2.set_size_inches(4.5 + fig2.get_size_inches())  # Resize fig for doco. You don't need this.



.. image:: /examples/Basics/images/sphx_glr_plot_truth_values_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  2.460 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_truth_values.py <plot_truth_values.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_truth_values.ipynb <plot_truth_values.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
